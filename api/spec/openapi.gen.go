// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"5ArZfsRmnP6r/uPnD5//fwAAAP//7WxhneUnAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
