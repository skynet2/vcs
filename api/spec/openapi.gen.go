// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
