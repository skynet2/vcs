// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"ZvVmnP6r/uPdp7v/HwAA//8MB7GU4zIBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
